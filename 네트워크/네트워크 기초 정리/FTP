
@ FTP(File Transport Protocol) : 파일 전송 프로토콜 
    - TCP/IP  프로토콜을 가지고 서버와 클라이언트 사이의 파일 전송을 하기 위한 프로토콜
    - 두 호스트 장치 간에 안전하게 데이터를 교환하는데 사용 
    - 대규모 산업, 대학 및 사무실에서 배포
    - 데이터 전송은 한 번에 한 방향으로 이루어짐. 

    * FTPS : FTP 프로토콜과 TLS 프로토콜이 결합한 형태
    * SFTP : FTP 프로토콜과 SSH 프로토콜이 결합한 형태 

    ex) FileZlia

@ FTP 동작원리
    - FTP 통신은 서비스를 제공하는 서버와 여기에 접속하는 클라이언트 사이에 두 개의 연결이 생성되는데,
    - 하나는 데이터 전송을 제어하기 위한 신호를 주고 받기 위함이고(21번 포트)
    - 다른 하나는 실제 데이터(파일) 전송에 사용된다(20번 포트)
    => 한 호스트는 클라이언트로 작동하고 다른 호스트는 서버로 작동함
    => 파일 공유 또는 데이터를 요청하는 사람 : 클라이언트 호스트
    => 응답으로 요청을 완료하는 사람은       : 서버 호스트

    * 제어 연결(Control Connection)
        - 클라이언트에서 서버로의 명령과 서버의 응답을 위한 연결을 함
        - 21번 포트 사용
        - 명령 또는 응답 형태의 제어정보를 전송함
        - 전체 FTP세션 동안 계속 연결 상태를 유지함. 

    * 데이터 연결(Data Connection)
        - 파일이 전성될 때 생성되는 데이터 연결
        - 20번 or 1024 이후 포트 사용
        - 각각의 파일 전송 때마다 설정되면 전송이 완료되면 폐쇄함

    - FTP 통신은 TCP 통신을 하기 때문에,
      처음 3-way-handshaking 과정을 거친 후 클라이언트가 명령어를 입력하면
      서버는 숫자 코드로 응답한다.     ?

    @ FTP 접속방식 (이미지 참고)
        * Active 모드(능동 모드)의 작동 방식
            1. 클라이언트가 서버의 command(21번)포트로 접속
            2. 서버 -> 클라이언트 ACK
            3. 서버는 data(20번)포트를 이용해 클라이언트로 접속
            4. 클라이언트 -> 서버 ACK

            - 3번째 서버가 클라이언트에 접속을 시도할 경우 클라이언트의 네트워크로 접속이 허용되지 않다면
                방화벽 또는 공유기 문제가 발생함.
            -> 이런경우 FTP 접속은 되지만 이후 데이터 목록을 받아오지못하여 에러가 발생.

        * Passive 모드(수동 모드)
            1. 클라이언트가 서버의 command(21번)포트로 접속 (능동 모드와 동일)
            2. 서버 -> 클라이언트 ACK / data(1024 ~ 65535번)포트를 알려줌 
            3. 클라이언트는 data(1024 ~ 65535번)포트를 이용해 서버로 접속
            4. 서버 -> 클라이언트 ACK

            - 두번째 data포트를 20번을 사용하지 않고 동적 포트(1024번 이후)를 랜덤으로 사용하므로
                Active 모드의 문제점은 해결이 되지만 서버의 동적 포트를 전부 열어두어야 하는 보안상의 문제점이 발생.
            



https://m.blog.naver.com/PostView.nhn?blogId=kiminkyu11&logNo=40162862260&proxyReferer=https:%2F%2Fwww.google.com%2F

https://xn--vj5b11biyw.kr/211

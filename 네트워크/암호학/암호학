
@
Sysmmetric Key Algorithm 대칭암호화 
Asymmetric Key Algorithm 비대칭암호화 (공개키,비공개키)
AES -대칭
RSA / Diffie-Hellman -비대칭 
Hasing - SHA (Secure Hash Algorithm)
-----------------------

@ 대칭키 암호화 vs 공개키 암호화(비대칭 암호화)
	* 대칭키 암호화
		- 암호화에 사용되는 키와 복호화에 사용되는 키가 동일한 기법.
			-> 암호화한 정보를 보낼 때 암호키를 같이 보내야 해서 타인에게 노출되는 경우 보안에 취약해짐.
		- 키 전달 및 관리에 어려움이 있지만 대칭키 암호화는 연산 속도가 빠르다. 
		- 각자의 사람이 서로의 키를 교환해야 하기 때문에 관리하기 불편해짐.
		- 디지털 서명이 불가능

	* 공개키 암호화(비대칭키 암호화)
		- 대칭키가 가지는 해킹의 위험을 막고자 나온 것. 공개키(Public key)
		- 암호화와 복호화에 사용하는 키를 분리하는 방식
		- 공개키 암호화는 비밀키 하나만 가지는 대칭 암호화 방식과 다르게
			공개키와 개인키 두 개가 존재한다.
		** 공개키 : 누구에게나 공개 가능한 키
		** 개인키 : 자신만이 갖고 있는 키가

		** 공개키 알고리즘은 공개키로 암호화를 하냐, 개인키로 암호화를 하냐에 따라 사용 분야가 달라짐
			- 공개키의 경우 데이터 보안에 중점을 두고, 개인키로 암호화하면 인증 과정에 중점을 둠
		* 공개키로 암호화 하는 경우
			- 상대방의 공개키로 데이터를 암호화하고 전달하면 데이터 전달받은 사람(공개키 주인)은 자신의 개인키로 데이터 복호화한다.
		* 개인키로 암호화 하는 경우
			- 개인키의 소유자가 개인키의 데이터를 암호화하고 공개키와 함께 전달.
				-> 이 과정에서 공개키와 데이터를 획득한 사람은 공개키를 이용해서 복호화 함.
				-> 데이터 보호의 목적보다는 공개키가 데이터 제공자의 신원 보장하기 위함 
			- 암호화된 데이터가 공개키로 복호화된다는 것은 공개키와 쌍을 이루는 개인키에 의하여 암호화되었음을 뜻함
				-> 데이터 제공자의 신원 확인이 보장된다는 뜻이기 때문에 전자서명에도 이용함.  




https://mkil.tistory.com/461

* 공개키, 비공개키 잘 정리됨 
https://www.crocus.co.kr/1236
더 자세한 설명 + 해시 함수
https://perfectacle.github.io/2018/04/13/key-algorithm/


* 읽어보기 -ssh 암호
https://medium.com/@jamessoun93/ssh%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94-87b58c521d6f

<쓰레드> 

- CPU 이용의 기본 단위 

* 장점	
	- 자원 공유
		- 전역변수를 공유한다. 
		- 같은 프로세스에 속한 다른 스레드와 코드 ,데이터 섹션, 열린 파일이나 신호와 같은 운영체제 자원들 공유 
	- I/O(입출력)이 처리되는 동안 다른 작업을 할 수 있도록 Context Switching을 해준다. 
		* 컴퓨터에서 가장 처리가 늦는 경우는 입출력이다 
* 단점
	- 언제 어떤 작업이 병렬적으로 일어난다 라고 보장을 해주지 않는다 


<멀티 쓰레드>




<데몬 쓰레드 - Daemon Thread>

 멀티태스킹 운영체제에서 데몬 
 	- 사용자가 직접 제어하지 않고, 백그라운드에서 돌아가면서 작업을 하는 프로그램 


- 일반 쓰레드가 종료되면 데몬쓰레드는 강제로 종료됨 




<Lock>
	- 쓰레드 여러개가 돌리다보면 같은 변수를 동시에 접근하게되어 값이 이상하게 될 때가 있음

	- lock을 acquire하면 해당 쓰레드만 공유 데이터에 접근할  수 있고, 
	   ock을 relase 해야만 다른 쓰레드에서 공유 데이터에 접근할수 있다.


<DeadLock 교착상태>
	- 멀티 스레드 중 스레드 간에 대기 상태가 종료 되지 않아 무한정 대기만 하는 정상적인 상태. 
	- 둘 이상의 쓰레드가 lock을 획득하기 위해 기다리는데, 
	 	이 lock을 잡고 있는 쓰레드도 똑같이 다른 lock을 기다리며 서로 블록 상태에 놓이는 것. 
		-> 두개 이상의 작업이 서로의 작업이 종료가 되지 않아 서로의 작업을 무한정 기다리는   상태 

		* 교착상태의 발생조건
		1. 상호배제(Mutual exclusion)
		2. 점유상태로 대기(hold and wait)
		3. 선점불가. 자원을 뺏지 못함(No preemption)
		4. 순환성 대기 (Circular wait)

	https://godkyu.tistory.com/6



	https://ddo-o.tistory.com/58









	https://sunyzero.tistory.com/161
	https://rottk.tistory.com/64
	https://www.ifunfactory.com/engine/documents/reference/ko/time.html